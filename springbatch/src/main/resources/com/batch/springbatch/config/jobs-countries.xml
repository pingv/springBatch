<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:batch="http://www.springframework.org/schema/batch"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
		http://www.springframework.org/schema/batch http://www.springframework.org/schema/batch/spring-batch-2.2.xsd">

  <batch:job id="countriesDBFromFile">
	<batch:step id="countriesDBFromFileStep1" next="countriesDBSeparation">
	  <batch:tasklet>
		<batch:chunk reader="countriesCvsFileItemReader" 
		             writer="countriesDBItemWriter"
			commit-interval="2">
		</batch:chunk>
	  </batch:tasklet>
	</batch:step>
	<batch:step id="countriesDBSeparation">
	  <batch:tasklet>
	     <batch:chunk reader="countriesDBItemReader" writer="countryAZItemWriter" 
	          commit-interval="10">
	       <batch:streams>
	         <batch:stream ref="countryAMItemWriter"/>
	         <batch:stream ref="countryNZItemWriter"/>
	       </batch:streams>   
	     </batch:chunk>
	  </batch:tasklet>
	</batch:step>	
  </batch:job>
  
  <bean id="countriesCvsFileItemReader" class="org.springframework.batch.item.file.FlatFileItemReader">
 	<property name="resource" value="classpath:files/countries.txt" />
	<property name="linesToSkip" value="1"/>
 	<property name="lineMapper">
		<bean class="org.springframework.batch.item.file.mapping.DefaultLineMapper">
		  <property name="lineTokenizer">
		    <bean
			  class="org.springframework.batch.item.file.transform.DelimitedLineTokenizer">
				<property name="names" value="country,isoCode" />
				<property name="delimiter" value=";"/>
			</bean>
		  </property>
		  <property name="fieldSetMapper">   
			  <!-- map to an object -->
			  <bean
			    class="org.springframework.batch.item.file.mapping.BeanWrapperFieldSetMapper">
				<property name="prototypeBeanName" value="countryModel" />
			  </bean>			
		  </property>
 		  </bean>
	  </property>
  </bean>  
  
  <bean id="countryModel" class="com.batch.springbatch.jobs.model.CountryModel"
       scope="prototype"/>
  
  <bean id="countriesDBItemWriter"
	class="org.springframework.batch.item.database.JdbcBatchItemWriter">
	<property name="dataSource" ref="dataSource" />
	<property name="sql">
	  <value>
            <![CDATA[        
            	insert into COUNTRIES(COUNTRY, ISO_CODE) 
			values (:country, :isoCode)
            ]]>
	  </value>
	</property>
	<!-- It will take care matching between object property and sql name parameter -->
	<property name="itemSqlParameterSourceProvider">
		<bean
		class="org.springframework.batch.item.database.BeanPropertyItemSqlParameterSourceProvider" />
	</property>
  </bean>  
  
  <!-- Country DB Reader -->
  <bean id="countriesDBItemReader"
    class="org.springframework.batch.item.database.JdbcCursorItemReader">
    <property name="dataSource" ref="dataSource"/>
    <property name="sql" value="SELECT COUNTRY, ISO_CODE FROM COUNTRIES"/>
    <property name="rowMapper">
      <bean class="com.batch.springbatch.jobs.rowmappers.CountryRowMapper"/>
    </property>
  </bean>

  <bean id="countryAZItemWriter"
      class="com.batch.springbatch.jobs.writers.CountryItemWriter">
    <property name="delegateAM" ref="countryAMItemWriter"/>
    <property name="delegateNZ" ref="countryNZItemWriter"/>
  </bean>


  <bean id="countryAMItemWriter"
      class="org.springframework.batch.item.file.FlatFileItemWriter">
    <property name="resource" value="file:c:/countriesAM.csv"/>
    <property name="lineAggregator">
      <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
        <property name="delimiter" value=","/>
        <property name="fieldExtractor">
          <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
             <property name="names" value="isoCode,country"/>
          </bean>
        </property>
      </bean>
    </property>
  </bean>

  <bean id="countryNZItemWriter"
      class="org.springframework.batch.item.file.FlatFileItemWriter">
    <property name="resource" value="file:c:/countriesNZ.csv"/>
    <property name="lineAggregator">
      <bean class="org.springframework.batch.item.file.transform.DelimitedLineAggregator">
        <property name="delimiter" value=","/>
        <property name="fieldExtractor">
          <bean class="org.springframework.batch.item.file.transform.BeanWrapperFieldExtractor">
             <property name="names" value="isoCode,country"/>
          </bean>
        </property>
      </bean>
    </property>
  </bean>



</beans>
